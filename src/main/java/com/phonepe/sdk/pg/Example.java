package com.phonepe.sdk.pg;

import com.phonepe.sdk.pg.common.models.request.RefundRequest;
import com.phonepe.sdk.pg.common.models.response.OrderStatusResponse;
import com.phonepe.sdk.pg.common.models.response.RefundResponse;
import com.phonepe.sdk.pg.common.models.response.RefundStatusResponse;
import com.phonepe.sdk.pg.payments.v2.StandardCheckoutClient;
import com.phonepe.sdk.pg.payments.v2.models.request.StandardCheckoutPayRequest;
import com.phonepe.sdk.pg.payments.v2.models.response.StandardCheckoutPayResponse;

public class Example {

    public static void main(String[] args) {
//        payStandardCheckout();
//        orderStatusStandardCheckout();
//        transactionStatusStandardCheckout();
//        refundStandardCheckout();
//        refundStatusStandardCheckout();
    }

    public static void payStandardCheckout(){
        String clientId = "<clientId>";
        String clientSecret = "<clientSecret>";
        Integer clientVersion = 1;
        Env env = Env.SANDBOX;

        StandardCheckoutClient standardCheckoutClient = StandardCheckoutClient.getInstance(
                clientId, clientSecret, clientVersion, env);

        String merchantOrderId = "<merchantOrderId>";
        long amount = 100;

        StandardCheckoutPayRequest standardCheckoutPayRequest = StandardCheckoutPayRequest.builder()
                .merchantOrderId(merchantOrderId)
                .amount(amount)
                .build();

        StandardCheckoutPayResponse response = standardCheckoutClient.pay(standardCheckoutPayRequest);
        String state = response.getState();
        System.out.println(response);
    }

    public static void orderStatusStandardCheckout() {
        String clientId = "<clientId>";
        String clientSecret = "<clientSecret>";
        Integer clientVersion = 1;
        Env env = Env.SANDBOX;

        StandardCheckoutClient standardCheckoutClient = StandardCheckoutClient.getInstance(
                clientId, clientSecret, clientVersion, env);

        String merchantOrderId = "<merchantOrderId>";                       //orderId used at the time of creation of order

        OrderStatusResponse orderStatusResponse = standardCheckoutClient.getOrderStatus(merchantOrderId);
        String state = orderStatusResponse.getState();
        System.out.println(state);
        System.out.println(orderStatusResponse);
    }

    public static void transactionStatusStandardCheckout() {
        String clientId = "<clientId>";
        String clientSecret = "<clientSecret>";
        Integer clientVersion = 1;
        Env env = Env.SANDBOX;

        StandardCheckoutClient standardCheckoutClient = StandardCheckoutClient.getInstance(
                clientId, clientSecret, clientVersion, env);

        String transactionId = "<transactionId>";                           //OM id generated by PhonePe

        OrderStatusResponse transactionStatusResponse = standardCheckoutClient.getTransactionStatus(transactionId);
        String state = transactionStatusResponse.getState();
        System.out.println(state);
    }

    public static void refundStandardCheckout() {
        String clientId = "<clientId>";
        String clientSecret = "<clientSecret>";
        Integer clientVersion = 1;
        Env env = Env.SANDBOX;

        StandardCheckoutClient standardCheckoutClient = StandardCheckoutClient.getInstance(
                clientId, clientSecret, clientVersion, env);

        String originalMerchantOrderId = "<originalMerchantOrderId>";       //orderId used at the time of creation of order
        String merchantRefundId = "<merchantRefundId>";                     //refund id
        long amount = 100;

        RefundRequest refundRequest = RefundRequest.builder()
                .amount(amount)
                .merchantRefundId(merchantRefundId)
                .originalMerchantOrderId(originalMerchantOrderId)
                .build();

        RefundResponse refundResponse = standardCheckoutClient.refund(refundRequest);
        String state = refundResponse.getState();
        System.out.println(state);
    }

    public static void refundStatusStandardCheckout() {
        String clientId = "<clientId>";
        String clientSecret = "<clientSecret>";
        Integer clientVersion = 1;
        Env env = Env.SANDBOX;

        StandardCheckoutClient standardCheckoutClient = StandardCheckoutClient.getInstance(
                clientId, clientSecret, clientVersion, env);

        String merchantRefundId = "<merchantRefundId>";                     //refundId used to initiate a refund

        RefundStatusResponse refundStatusResponse = standardCheckoutClient.getRefundStatus(merchantRefundId);
        System.out.println(refundStatusResponse);
    }

}
